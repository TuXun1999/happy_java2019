package function_module;

public class test_function {
	/*
	 * Methods inside the class
	 */
	public static void swap(int a, int b){
		int tmp = a;
		a = b;
		b = tmp;
	}
	public static int rand(int N){
		int ran = (int)(Math.random()*N);
		return ran;
		
	}
	public static boolean isprime(int N){
		for(int i = 2; i <= Math.sqrt(N); i ++){
			if(N%i == 0)
				return false;
		}
		return true;
	}
	public static void main(String[] args){ //Standard way to define method "main"
		/*
		 * Function: static methods in java ---> separate the task, reuse codes
		 * 
		 * public: accessible to programs outside the class
		 * void: type of the function (return type)
		 * static: this function is stable?...
		 * parameters: arrays can be transferred directly to a function
		 * the location of the function doesn't affect its functionality
		 * 
		 */
		//Part I: typical swapping method   
		//----> verify that the delivering a variable to a function actually only means giving a copy of the value of the variable to the function in java
		int a = 2;
		int b = 3;
		swap(a,b);
		System.out.println(a + " " + b); 
		/*Question is, how to swap two numbers by function without pointer?
		 * Solution: You can include a, b into a dynamic instance of a class
		 */
		
		//Part II: example  ---> local variables is accessible only inside the block
		int N = 10;
		int rand = rand(N);
		System.out.println("Random number: " + rand);
		
		//Part III: more examples
		System.out.println("Is number " + N + " a prime number? ");
		System.out.println(isprime(N));
	}
}
